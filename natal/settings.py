"""
Django settings for natal project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import json
import dj_database_url
from os import environ
#import boto3
#from botocore.exceptions import ClientError

#def get_secret():
#
#    secret_name = "natal/djangodb/djangousersecret"
#    region_name = "us-east-2"
#
#    # Create a Secrets Manager client
#    session = boto3.session.Session()
#    client = session.client(
#        service_name='secretsmanager',
#        region_name=region_name
#    )
#
#    try:
#        get_secret_value_response = client.get_secret_value(
#            SecretId=secret_name
#        )
#    except ClientError as e:
#        # For a list of exceptions thrown, see
#        # https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html
#        raise e
#
#    secret = get_secret_value_response['SecretString']

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-dy-ssp576g)gvx-o*qhtqva6q10!e5djw6x833&-cxnyafke^$"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [".awsapprunner.com", "169.254.175.250"]


# Application definition

INSTALLED_APPS = [
    "natal.apps.SecretoConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = "natal.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "natal.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

#if "DATABASE_SECRET" in environ:
#    database_secret = environ.get("DATABASE_SECRET")
#    db_url = json.loads(database_secret)["DATABASE_URL"]
#    #db_url = get_secret()
#    #DATABASES = {"default": dj_database_url.parse(db_url)}
#    DATABASES = {"default": dj_database_url.parse(str(db_url))}
#else:
DATABASES = {"default": dj_database_url.parse("sqlite:///db.sqlite3")}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
